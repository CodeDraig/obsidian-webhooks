import typescript from "@rollup/plugin-typescript";
import { nodeResolve } from "@rollup/plugin-node-resolve";
import commonjs from "@rollup/plugin-commonjs";
import replace from "@rollup/plugin-replace";
import dotenv from "dotenv";
import fs from "fs";

const env = dotenv.parse(fs.readFileSync("../.env"));

const isProd = process.env.BUILD === "production";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/
`;

export default {
  input: "main.ts",
  output: {
    dir: ".",
    sourcemap: "inline",
    sourcemapExcludeSources: isProd,
    format: "cjs",
    exports: "default",
    banner,
  },
  external: ["obsidian"],
  plugins: [
    typescript(),
    nodeResolve({ browser: true }),
    replace({
      preventAssignment: true,
      "process.env.FIREBASE_API_KEY": JSON.stringify(
        env["VITE_FIREBASE_API_KEY"]
      ),
    }),
    commonjs(),
  ],
};
